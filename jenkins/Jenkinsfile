/*
 * ────────────────────────────────────────────────────────────────────────────────
 *  Jenkins Declarative Pipeline – MERN Build + Push + Helm Deploy to Minikube
 * ────────────────────────────────────────────────────────────────────────────────
 */

pipeline {
    agent any

    environment {
        IMAGE_TAG = "v${BUILD_NUMBER}"          // e.g. v21
    }

    stages {

        /* ───────── Build & Push BACKEND ───────── */
        stage('Build & Push Backend Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_CREDS',
                                                  usernameVariable: 'DOCKERHUB_USER',
                                                  passwordVariable: 'DOCKERHUB_PASS')]) {

                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDS') {
                            def img = docker.build(
                                "${DOCKERHUB_USER}/mern-backend:${IMAGE_TAG}",
                                "-f ${env.WORKSPACE}/backend/Dockerfile ${env.WORKSPACE}/backend"
                            )
                            img.push()
                        }
                    }
                }
            }
        }

        /* ───────── Build & Push FRONTEND ───────── */
        stage('Build & Push Frontend Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_CREDS',
                                                  usernameVariable: 'DOCKERHUB_USER',
                                                  passwordVariable: 'DOCKERHUB_PASS')]) {

                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDS') {
                            def img = docker.build(
                                "${DOCKERHUB_USER}/mern-frontend:${IMAGE_TAG}",
                                "-f ${env.WORKSPACE}/frontend/Dockerfile ${env.WORKSPACE}/frontend"
                            )
                            img.push()
                        }
                    }
                }
            }
        }

        /* ───────────── Deploy with Helm ─────────── */
        stage('Deploy to Minikube using Helm') {
            steps {
                withCredentials([
                    file(credentialsId: 'K8S_MINIKUBE',   variable: 'KCFG'),
                    usernamePassword(credentialsId: 'DOCKERHUB_CREDS',
                                     usernameVariable: 'DOCKERHUB_USER',
                                     passwordVariable: 'DOCKERHUB_PASS')
                ]) {

                    sh """
                        set -e
                        export KUBECONFIG="${KCFG}"

                        cd ${WORKSPACE}/helm-chart/mern-chart

                        helm upgrade --install mern-release . \
                          --set backend.image.repository=${DOCKERHUB_USER}/mern-backend \
                          --set backend.image.tag=${IMAGE_TAG} \
                          --set frontend.image.repository=${DOCKERHUB_USER}/mern-frontend \
                          --set frontend.image.tag=${IMAGE_TAG}
                    """
                }
            }
        }
    }

    post {
        success { echo '🎉 Deployment successful!' }
        failure { echo '❌ Build or deploy failed' }
    }
}
