pipeline {
    agent any

    environment {
        IMAGE_TAG = "v${BUILD_NUMBER}"
    }

    stages {
        stage('Build & Push Backend Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_CREDS', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDS') {
                            def backendImage = docker.build(
                                "${DOCKERHUB_USER}/mern-backend:${IMAGE_TAG}",
                                "-f ${env.WORKSPACE}/backend/Dockerfile ${env.WORKSPACE}/backend"
                            )
                            backendImage.push()
                        }
                    }
                }
            }
        }

        stage('Build & Push Frontend Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKERHUB_CREDS', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    script {
                        docker.withRegistry('https://index.docker.io/v1/', 'DOCKERHUB_CREDS') {
                            def frontendImage = docker.build(
                                "${DOCKERHUB_USER}/mern-frontend:${IMAGE_TAG}",
                                "-f ${env.WORKSPACE}/frontend/Dockerfile ${env.WORKSPACE}/frontend"
                            )
                            frontendImage.push()
                        }
                    }
                }
            }
        }

        stage('Deploy to Minikube using Helm') {
            steps {
                withCredentials([
                    file(credentialsId: 'K8S_MINIKUBE', variable: 'KCFG'),
                    usernamePassword(credentialsId: 'DOCKERHUB_CREDS', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')
                ]) {
                    sh """
                        export KUBECONFIG=${KCFG}
                        cd helm-chart/mern-chart
                        helm upgrade --install mern-release . \\
                          --set backend.image=${DOCKERHUB_USER}/mern-backend:${IMAGE_TAG} \\
                          --set frontend.image=${DOCKERHUB_USER}/mern-frontend:${IMAGE_TAG}
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'üéâ Deployment successful!'
        }
        failure {
            echo '‚ùå Build or deploy failed'
        }
    }
}
